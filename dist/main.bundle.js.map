{"version":3,"sources":["webpack:///E:/www/ng2-sample/src async","webpack:///E:/www/ng2-sample/src/app/app-route.ts","webpack:///E:/www/ng2-sample/src/app/app.component.css","webpack:///E:/www/ng2-sample/src/app/app.component.html","webpack:///E:/www/ng2-sample/src/app/app.component.ts","webpack:///E:/www/ng2-sample/src/app/app.module.ts","webpack:///E:/www/ng2-sample/src/app/dashboard/dashboard.component.css","webpack:///E:/www/ng2-sample/src/app/dashboard/dashboard.component.html","webpack:///E:/www/ng2-sample/src/app/dashboard/dashboard.component.ts","webpack:///E:/www/ng2-sample/src/app/field/field-form/field-form.component.css","webpack:///E:/www/ng2-sample/src/app/field/field-form/field-form.component.html","webpack:///E:/www/ng2-sample/src/app/field/field-form/field-form.component.ts","webpack:///E:/www/ng2-sample/src/app/field/field-type.enum.ts","webpack:///E:/www/ng2-sample/src/app/field/field.component.css","webpack:///E:/www/ng2-sample/src/app/field/field.component.html","webpack:///E:/www/ng2-sample/src/app/field/field.component.ts","webpack:///E:/www/ng2-sample/src/app/field/field.service.ts","webpack:///E:/www/ng2-sample/src/app/field/field.ts","webpack:///E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.css","webpack:///E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.html","webpack:///E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.ts","webpack:///E:/www/ng2-sample/src/app/form/form-field/form-field.component.css","webpack:///E:/www/ng2-sample/src/app/form/form-field/form-field.component.html","webpack:///E:/www/ng2-sample/src/app/form/form-field/form-field.component.ts","webpack:///E:/www/ng2-sample/src/app/form/form.component.css","webpack:///E:/www/ng2-sample/src/app/form/form.component.html","webpack:///E:/www/ng2-sample/src/app/form/form.component.ts","webpack:///E:/www/ng2-sample/src/app/form/form.service.ts","webpack:///E:/www/ng2-sample/src/app/in-memory-data.service.ts","webpack:///E:/www/ng2-sample/src/environments/environment.ts","webpack:///E:/www/ng2-sample/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA,8D;;;;;;;;;;;;;;;;;;;;ACNA;;GAEG;AACkD;AACE;AAEgB;AACT;AACP;AAEvD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,WAAW,EAAG,SAAS,EAAE,0FAAkB,EAAE;IACrD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,8EAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,MAAM,EAAM,SAAS,EAAE,2EAAa,EAAE;CAC/C,CAAC;AAMF,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAJ1B,sFAAQ,CAAC;QACR,OAAO,EAAE,CAAE,qEAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;QACzC,OAAO,EAAE,CAAE,qEAAY,CAAE;KAC1B,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;ACrB3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6jB;;;;;;;;;;;;;;;;ACAgD;AAQhD,IAAa,YAAY;IAAzB;IAMA,CAAC;IALC,+BAAQ,GAAR;IACA,CAAC;IAIH,mBAAC;AAAD,CAAC;AANY,YAAY;IALxB,yFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;GACW,YAAY,CAMxB;AANwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACjB;AACK;AACsB;AAEH;AACD;AAEnB;AAEE;AACsB;AACZ;AACH;AACD;AACwB;AACD;AACkB;AAC5C;AAwBhD,IAAa,SAAS;IAAtB;IACA,CAAC;IAAD,gBAAC;AAAD,CAAC;AADY,SAAS;IAtBrB,sFAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;YACZ,0FAAkB;YAClB,8EAAc;YACd,4EAAa;YACb,mGAAkB;YAClB,kGAAkB;YAClB,oHAAkB;SACnB;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,2EAAmB;YACnB,iEAAU;YACV,uFAAoB,CAAC,OAAO,CAAC,oFAAmB,CAAC;YACjD,kEAAc;SAEf;QACD,SAAS,EAAE,CAAC,2EAAY,EAAE,wEAAW,CAAC;QACtC,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CACrB;AADqB;;;;;;;;AC1CtB;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,o2B;;;;;;;;;;;;;;;;;;;;;ACAgD;AAII;AACH;AAOjD,IAAa,kBAAkB;IAK7B,4BAAoB,YAA0B,EAC1B,WAAwB;QADxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC;YAC3B,MAAM,CAAC,KAAI,CAAC,OAAO,EAAE,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAED,sCAAS,GAAT;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,YAAY;aACrB,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAO,GAAP;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,WAAW;aACpB,OAAO,EAAE;aACT,IAAI,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IACpC,CAAC;IACH,yBAAC;AAAD,CAAC;AA1BY,kBAAkB;IAL9B,yFAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,0FAAyC;QACzC,yFAAwC;KACzC,CAAC;yDAMkC,0EAAY,oBAAZ,0EAAY,sDACb,uEAAW,oBAAX,uEAAW;GANjC,kBAAkB,CA0B9B;AA1B8B;;;;;;;;;ACZ/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,+IAA+I,0EAA0E,uzBAAuzB,4EAA4E,+gBAA+gB,0EAA0E,+V;;;;;;;;;;;;;;;;;;;;;;;ACA9kD;AACX;AAE7D;AACc;AACC;AAQ9C,IAAa,kBAAkB;IAU7B,4BAAoB,YAA0B,EAAW,EAAe;QAApD,iBAAY,GAAZ,YAAY,CAAc;QAAW,OAAE,GAAF,EAAE,CAAa;QANxE,eAAU,GAAqB,mEAAS,CAAC;QAEzC,cAAS,GAAY,KAAK,CAAC;QACjB,WAAM,GAAG,IAAI,mEAAY,EAAE,CAAC;IAItC,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,mEAAS,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,IAAI,EAAE,CAAC,IAAI,CAAC;YACZ,MAAM,EAAE,CAAC,IAAI,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC5G,MAAM,EAAE,CAAC,mEAAS,CAAC,IAAI,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAC7C,OAAO,EAAE,CAAC,IAAI,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7G,MAAM,EAAE,CAAC,IAAI,CAAC;SACf,CAAC,CAAC;IACL,CAAC;IAED,iCAAI,GAAJ,UAAK,KAAU;QAAf,iBAOC;QANC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAQ,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK;YAC9C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,IAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,YAAqB,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;QACzF,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;AAhCW;IAAT,qFAAM,EAAE;;kDAA6B;AAC7B;IAAR,mFAAK,EAAE;kDAAQ,qDAAK,oBAAL,qDAAK;iDAAC;AARX,kBAAkB;IAN9B,yFAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,kGAA0C;QAC1C,iGAAyC;KAC1C,CAAC;yDAYkC,oEAAY,oBAAZ,oEAAY,sDAAe,mEAAW,oBAAX,mEAAW;GAV7D,kBAAkB,CAuC9B;AAvC8B;;;;;;;;;;;ACb/B,IAAY,SAEX;AAFD,WAAY,SAAS;IACnB,yCAAQ;AACV,CAAC,EAFW,SAAS,KAAT,SAAS,QAEpB;;;;;;;;ACFD;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,qwC;;;;;;;;;;;;;;;;;;;;;ACAgD;AAGJ;AACC;AAO7C,IAAa,cAAc;IAMzB,wBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAH9C,eAAU,GAAqB,mEAAS,CAAC;QACzC,gBAAW,GAAU,IAAI,CAAC;IAG1B,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kCAAS,GAAT;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY;aACd,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,+BAAM,GAAN;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,+BAAM,GAAN,UAAO,KAAY;QACjB,IAAI,CAAC,YAAY;aACd,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;aAChB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,6BAAI,GAAJ,UAAK,KAAK;QACR,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IACH,qBAAC;AAAD,CAAC;AAhCY,cAAc;IAL1B,yFAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kFAAqC;QACrC,iFAAoC;KACrC,CAAC;yDAOkC,oEAAY,oBAAZ,oEAAY;GANnC,cAAc,CAgC1B;AAhC0B;;;;;;;;;;;;;;;;;;;;;;;;ACX3B;;GAEG;AACyC;AACA;AAEP;AAMrC,IAAa,YAAY;IAKvB,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC5D,cAAS,GAAG,YAAY,CAAC,CAAE,iBAAiB;IAGpD,CAAC;IAED,gCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;aACjC,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,CAAC,IAAe,EAA/B,CAA+B,CAAC;aACjD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAGD,uCAAuC;IACvC,2CAA2C;IAC3C,8BAA8B;IAC9B,mBAAmB;IACnB,sDAAsD;IACtD,gCAAgC;IAChC,IAAI;IAEJ,6BAAM,GAAN,UAAO,EAAU;QACf,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,EAAI,CAAC;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aAClD,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,WAAI,EAAJ,CAAI,CAAC;aAChB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,2BAAI,GAAJ,UAAK,KAAY;QACf,MAAM,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpE,CAAC;IAED,6BAAM,GAAN,UAAO,KAAY;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aACpE,SAAS,EAAE;aACX,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,IAAa,EAAxB,CAAwB,CAAC;aACrC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,6BAAM,GAAN,UAAO,KAAY;QACjB,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,SAAI,KAAK,CAAC,EAAI,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aACxD,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,YAAK,EAAL,CAAK,CAAC;aACjB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IACH,mBAAC;AAAD,CAAC;AAzDY,YAAY;IADxB,wFAAU,EAAE;yDAMe,2DAAI,oBAAJ,2DAAI;GALnB,YAAY,CAyDxB;AAzDwB;;;;;;;;;;;;ACZmB;AAE5C;IAOE;QACE,IAAI,CAAC,IAAI,GAAG,mEAAS,CAAC,IAAI,CAAC;IAC7B,CAAC;IACH,YAAC;AAAD,CAAC;;;;;;;;;ACZD;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,+M;;;;;;;;;;;;;;;;;;;;;ACAuG;AACX;AAE9C;AAS9C,IAAa,kBAAkB;IAM7B;IACA,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAEH,yBAAC;AAAD,CAAC;AAVU;IAAR,mFAAK,EAAE;kDAAQ,2DAAK,oBAAL,2DAAK;iDAAC;AACb;IAAR,mFAAK,EAAE;kDAAY,mEAAW,oBAAX,mEAAW;qDAAC;AACvB;IAAR,mFAAK,EAAE;kDAAO,iEAAS,oBAAT,iEAAS;gDAAC;AAJd,kBAAkB;IAL9B,yFAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,mHAA0C;QAC1C,kHAAyC;KAC1C,CAAC;;GACW,kBAAkB,CAY9B;AAZ8B;;;;;;;;;ACZ/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,gZ;;;;;;;;;;;;;;;;;;;;;;ACAuG;AACX;AAEpD;AACc;AAQtD,IAAa,kBAAkB;IAO7B;QALA,eAAU,GAAqB,yEAAS,CAAC;IAMzC,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAEH,yBAAC;AAAD,CAAC;AAVU;IAAR,mFAAK,EAAE;kDAAQ,2DAAK,oBAAL,2DAAK;iDAAC;AACb;IAAR,mFAAK,EAAE;kDAAY,mEAAW,oBAAX,mEAAW;qDAAC;AACvB;IAAR,mFAAK,EAAE;kDAAO,iEAAS,oBAAT,iEAAS;gDAAC;AALd,kBAAkB;IAL9B,yFAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,iGAA0C;QAC1C,gGAAyC;KAC1C,CAAC;;GACW,kBAAkB,CAa9B;AAb8B;;;;;;;;;ACZ/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,qwB;;;;;;;;;;;;;;;;;;;;;;ACAgD;AAC4C;AAIxC;AACT;AAQ3C,IAAa,aAAa;IAMxB,uBAAoB,YAA0B,EAC1B,WAAwB,EACxB,EAAe;QAFf,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QALnC,SAAI,GAAc,IAAI,CAAC;QACvB,cAAS,GAAY,KAAK,CAAC;IAK3B,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAUC;QATA,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC;YAC3B,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;gBACnD,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,CAAC,CAAU,CAAC;gBACpC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC9B,CAAC;YAED,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAS,GAAT;QAAA,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,YAAY;aACrB,SAAS,EAAE;aACX,IAAI,CAAC,gBAAM,IAAI,YAAI,CAAC,MAAM,GAAG,MAAM,EAApB,CAAoB,CAAC,CAAC;IAC1C,CAAC;IAED,4BAAI,GAAJ,UAAK,KAAU;QAAf,iBAMC;QALC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;YAClC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACH,oBAAC;AAAD,CAAC;AApCY,aAAa;IALzB,yFAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAoC;QACpC,+EAAmC;KACpC,CAAC;yDAOkC,0EAAY,oBAAZ,0EAAY,sDACb,kEAAW,oBAAX,kEAAW,sDACpB,mEAAW,oBAAX,mEAAW;GARxB,aAAa,CAoCzB;AApCyB;;;;;;;;;;;;;;;;;;;;;;;;ACdkB;AACA;AAEP;AAGrC,IAAa,WAAW;IAKtB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAHtB,YAAO,GAAG,IAAI,8DAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAC5D,YAAO,GAAG,UAAU,CAAC,CAAE,iBAAiB;IAGhD,CAAC;IAED,6BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;aAC/B,SAAS,EAAE;aACX,IAAI,CAAC,kBAAQ,IAAI,eAAQ,CAAC,IAAI,EAAE,CAAC,IAAa,EAA7B,CAA6B,CAAC;aAC/C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,4BAAM,GAAN,UAAO,IAAI;QACT,MAAM,CAAC,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aACjE,SAAS,EAAE;aACX,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,CAAC,IAAI,EAAf,CAAe,CAAC;aAC5B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC5B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAChD,CAAC;IACH,kBAAC;AAAD,CAAC;AA3BY,WAAW;IADvB,wFAAU,EAAE;yDAMe,2DAAI,oBAAJ,2DAAI;GALnB,WAAW,CA2BvB;AA3BuB;;;;;;;;;;ACFxB;AAAA;IAAA;IAYA,CAAC;IAXC,sCAAQ,GAAR;QACE,IAAM,MAAM,GAAG;YACb,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,mBAAmB,EAAC;YACxE,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,2BAA2B,EAAC;SAC3F,CAAC;QACF,IAAM,IAAI,GAAG;YACX,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAC;YAC/C,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,YAAY,EAAC;SAChD,CAAC;QACF,MAAM,CAAC,EAAC,MAAM,UAAE,IAAI,QAAC,CAAC;IACxB,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;;AChBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,4FAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","/**\r\n * Created by Exlord on 6/13/2017.\r\n */\r\nimport { NgModule }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent }   from './dashboard/dashboard.component';\r\nimport { FieldComponent }      from './field/field.component';\r\nimport { FormComponent }  from './form/form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n  { path: 'dashboard',  component: DashboardComponent },\r\n  { path: 'field', component: FieldComponent },\r\n  { path: 'form',     component: FormComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ RouterModule.forRoot(routes) ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRouteModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/app-route.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n            <ul class=\\\"nav nav-pills\\\">\\n        <li role=\\\"presentation\\\" [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a></li>\\n        <li role=\\\"presentation\\\" [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/field']\\\">Field</a></li>\\n        <li role=\\\"presentation\\\" [routerLinkActive]=\\\"['active']\\\"><a [routerLink]=\\\"['/form']\\\">Form</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  ngOnInit(): void {\n  }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {HttpModule}    from '@angular/http';\nimport {FormsModule, ReactiveFormsModule}   from '@angular/forms';\n\nimport {InMemoryWebApiModule} from 'angular-in-memory-web-api';\nimport {InMemoryDataService}  from './in-memory-data.service';\n\nimport {AppRouteModule} from './app-route';\n\nimport {AppComponent} from './app.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {FieldComponent} from './field/field.component';\nimport {FormComponent} from './form/form.component';\nimport {FieldService} from './field/field.service';\nimport {FieldFormComponent} from './field/field-form/field-form.component';\nimport {FormFieldComponent} from './form/form-field/form-field.component';\nimport {FieldTextComponent} from './form/form-field/fields/field-text/field-text.component';\nimport {FormService} from './form/form.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    FieldComponent,\n    FormComponent,\n    FieldFormComponent,\n    FormFieldComponent,\n    FieldTextComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    InMemoryWebApiModule.forRoot(InMemoryDataService),\n    AppRouteModule,\n\n  ],\n  providers: [FieldService, FormService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1 class=\\\"page-header\\\">Submitted Data</h1>\\n    <p class=\\\"help-block\\\">\\n      These data has been submitted throw the dynamically generated form. Try it\\n      <a [routerLink]=\\\"['/form']\\\">here</a>.<br/>\\n      You can add more fields to this form <a [routerLink]=\\\"['/field']\\\">Fields</a>here.<br/>\\n    </p>\\n\\n    <div class=\\\"table-responsive\\\">\\n      <table class=\\\"table table-condensed table-hover table-striped\\\">\\n        <thead>\\n        <tr>\\n          <th *ngFor=\\\"let field of fields\\\" [innerHtml]=\\\"field.label\\\"></th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let row of data\\\">\\n          <td *ngFor=\\\"let field of fields\\\" [innerHtml]=\\\"row[field.name]\\\"></td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\n\nimport {Field} from '../field/field';\nimport {FieldType} from '../field/field-type.enum';\nimport {FieldService} from '../field/field.service';\nimport {FormService} from '../form/form.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  fields: Field[];\n  data: any[];\n\n  constructor(private fieldService: FieldService,\n              private formService: FormService) {\n  }\n\n  ngOnInit() {\n    return this.getFields().then(() => {\n      return this.getData();\n    })\n  }\n\n  getFields(): Promise<Field[]> {\n    return this.fieldService\n      .getFields()\n      .then(fields => this.fields = fields);\n  }\n\n  getData(): Promise<Field[]> {\n    return this.formService\n      .getData()\n      .then(data => this.data = data);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/field/field-form/field-form.component.css\n// module id = ../../../../../src/app/field/field-form/field-form.component.css\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save(form.value, form.valid)\\\" novalidate>\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':!form.controls['name'].valid && form.controls['name'].touched}\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           name=\\\"name\\\"\\n           id=\\\"name\\\"\\n           placeholder=\\\"Name\\\"\\n           required\\n           [formControl]=\\\"form.controls['name']\\\">\\n    <p class=\\\"help-block text-danger\\\"\\n       [hidden]=\\\"form.controls['name'].valid || form.controls['name'].pristine || !submitted \\\">\\n      The name should be between 5 and 50 characters.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"type\\\">Type</label>\\n    <select class=\\\"form-control\\\" id=\\\"type\\\" name=\\\"type\\\" [formControl]=\\\"form.controls['type']\\\">\\n      <option *ngFor=\\\"let key of fieldTypes\\\" [value]=\\\"FieldTypes[key]\\\" [innerHtml]=\\\"key\\\"></option>\\n    </select>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':!form.controls['label'].valid && form.controls['label'].touched}\\\">\\n    <label for=\\\"Name\\\">Label</label>\\n    <input type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           name=\\\"label\\\"\\n           id=\\\"label\\\"\\n           placeholder=\\\"Label\\\"\\n           required\\n           [formControl]=\\\"form.controls['label']\\\">\\n    <p class=\\\"help-block text-danger\\\"\\n       [hidden]=\\\"form.controls['label'].valid || form.controls['label'].pristine || !submitted \\\">\\n      The label should be between 5 and 50 characters.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error':!form.controls['help'].valid && form.controls['help'].touched}\\\">\\n    <label for=\\\"Name\\\">Help Text</label>\\n    <textarea\\n      class=\\\"form-control\\\"\\n      name=\\\"help\\\"\\n      id=\\\"help\\\"\\n      placeholder=\\\"Help Text\\\"\\n      [formControl]=\\\"form.controls['help']\\\"></textarea>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!form.valid\\\">\\n    Save\\n  </button>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/field/field-form/field-form.component.html\n// module id = ../../../../../src/app/field/field-form/field-form.component.html\n// module chunks = 1","import {Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators,FormsModule } from '@angular/forms';\n\nimport {Field} from '../field';\nimport {FieldType} from '../field-type.enum';\nimport {FieldService} from '../field.service';\n\n@Component({\n  selector: 'app-field-form',\n  templateUrl: './field-form.component.html',\n  styleUrls: ['./field-form.component.css']\n})\n\nexport class FieldFormComponent implements OnInit,OnChanges {\n\n\n  fieldTypes: string[];\n  FieldTypes: typeof FieldType = FieldType;\n  form: FormGroup;\n  submitted: boolean = false;\n  @Output() onSave = new EventEmitter();\n  @Input() field: Field;\n\n  constructor(private fieldService: FieldService, private  fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n    let fieldTypes = Object.keys(FieldType);\n    this.fieldTypes = fieldTypes.splice(fieldTypes.length / 2);\n    this.form = this.fb.group({\n      'id': [null],\n      'name': [null, Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(50)])],\n      'type': [FieldType.Text, Validators.required],\n      'label': [null, Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(50)])],\n      'help': [null],\n    });\n  }\n\n  save(value: any): void {\n    this.submitted = true;\n    this.fieldService.save(<Field>value).then((field) => {\n      this.submitted = false;\n      this.form.reset();\n      this.onSave.emit();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.field.currentValue) {\n      (<FormGroup>this.form).setValue(changes.field.currentValue as Field, {onlySelf: true});\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/field/field-form/field-form.component.ts","export enum FieldType {\n  Text = 1,\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/field/field-type.enum.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/field/field.component.css\n// module id = ../../../../../src/app/field/field.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1 class=\\\"page-header\\\">Fields</h1>\\n\\n    <div class=\\\"col-sm-6\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-condensed table-hover table-striped\\\">\\n          <thead>\\n          <tr>\\n            <th>Id</th>\\n            <th>Name</th>\\n            <th>Type</th>\\n            <th>Label</th>\\n            <th>Help Text</th>\\n          </tr>\\n          </thead>\\n          <tbody>\\n          <tr *ngFor=\\\"let field of fields\\\">\\n            <td [innerHtml]=\\\"field.id\\\"></td>\\n            <td [innerHtml]=\\\"field.name\\\"></td>\\n            <td [innerHtml]=\\\"FieldTypes[field.type]\\\"></td>\\n            <td [innerHtml]=\\\"field.label\\\"></td>\\n            <td [innerHtml]=\\\"field.help\\\"></td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-default btn-xs\\\" (click)=\\\"edit(field)\\\">Edit</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\" (click)=\\\"delete(field)\\\">Delete</button>\\n            </td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n      <app-field-form (onSave)=\\\"onSave()\\\" [field]=\\\"fieldToEdit\\\"></app-field-form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/field/field.component.html\n// module id = ../../../../../src/app/field/field.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\n\nimport {Field} from './field';\nimport {FieldType} from './field-type.enum';\nimport {FieldService} from './field.service';\n\n@Component({\n  selector: 'app-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./field.component.css']\n})\nexport class FieldComponent implements OnInit {\n\n  fields: Field[];\n  FieldTypes: typeof FieldType = FieldType;\n  fieldToEdit: Field = null;\n\n  constructor(private fieldService: FieldService) {\n  }\n\n  ngOnInit() {\n    this.getFields();\n  }\n\n  getFields(): void {\n    this.fieldService\n      .getFields()\n      .then(fields => this.fields = fields);\n  }\n\n  onSave() {\n    this.getFields();\n  }\n\n  delete(field: Field) {\n    this.fieldService\n      .delete(field.id)\n      .then(this.getFields.bind(this));\n  }\n\n  edit(field) {\n    this.fieldToEdit = field;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/field/field.component.ts","/**\r\n * Created by Exlord on 6/13/2017.\r\n */\r\nimport {Injectable}    from '@angular/core';\r\nimport {Headers, Http} from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport {Field} from './field';\r\nimport {FieldType} from './field-type.enum';\r\n\r\n@Injectable()\r\nexport class FieldService {\r\n\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private fieldsUrl = 'api/fields';  // URL to web api\r\n\r\n  constructor(private http: Http) {\r\n  }\r\n\r\n  getFields(): Promise<Field[]> {\r\n    return this.http.get(this.fieldsUrl)\r\n      .toPromise()\r\n      .then(response => response.json().data as Field[])\r\n      .catch(this.handleError);\r\n  }\r\n\r\n\r\n  // getHero(id: number): Promise<Hero> {\r\n  //   const url = `${this.heroesUrl}/${id}`;\r\n  //   return this.http.get(url)\r\n  //     .toPromise()\r\n  //     .then(response => response.json().data as Hero)\r\n  //     .catch(this.handleError);\r\n  // }\r\n\r\n  delete(id: number): Promise<void> {\r\n    const url = `${this.fieldsUrl}/${id}`;\r\n    return this.http.delete(url, {headers: this.headers})\r\n      .toPromise()\r\n      .then(() => null)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  save(field: Field): Promise<Field> {\r\n    return field.id == null ? this.create(field) : this.update(field);\r\n  }\r\n\r\n  create(field: Field): Promise<Field> {\r\n    return this.http\r\n      .post(this.fieldsUrl, JSON.stringify(field), {headers: this.headers})\r\n      .toPromise()\r\n      .then(res => res.json().data as Field)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  update(field: Field): Promise<Field> {\r\n    const url = `${this.fieldsUrl}/${field.id}`;\r\n    return this.http\r\n      .put(url, JSON.stringify(field), {headers: this.headers})\r\n      .toPromise()\r\n      .then(() => field)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  private handleError(error: any): Promise<any> {\r\n    console.error('An error occurred', error); // for demo purposes only\r\n    return Promise.reject(error.message || error);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/field/field.service.ts","import {FieldType} from './field-type.enum';\n\nexport class Field {\n  id: number;\n  name: string;\n  type: FieldType;\n  label: string;\n  help: string;\n\n  constructor() {\n    this.type = FieldType.Text;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/field/field.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.css\n// module id = ../../../../../src/app/form/form-field/fields/field-text/field-text.component.css\n// module chunks = 1","module.exports = \"<input type=\\\"text\\\"\\n       class=\\\"form-control\\\"\\n       [name]=\\\"field.name\\\"\\n       [id]=\\\"field.name\\\"\\n       [placeholder]=\\\"field.label\\\"\\n       [formControl]=\\\"formField\\\"\\n>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.html\n// module id = ../../../../../src/app/form/form-field/fields/field-text/field-text.component.html\n// module chunks = 1","import {Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators, FormsModule} from '@angular/forms';\n\nimport {Field} from '../../../../field/field';\nimport {FieldType} from '../../../../field/field-type.enum';\nimport {FieldService} from '../../../../field/field.service';\n\n@Component({\n  selector: 'app-field-text',\n  templateUrl: './field-text.component.html',\n  styleUrls: ['./field-text.component.css']\n})\nexport class FieldTextComponent implements OnInit {\n\n  @Input() field: Field;\n  @Input() formField: FormControl;\n  @Input() form: FormGroup;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/form/form-field/fields/field-text/field-text.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form-field/form-field.component.css\n// module id = ../../../../../src/app/form/form-field/form-field.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"form-group\\\">\\n  <label [for]=\\\"field.name\\\" [innerHtml]=\\\"field.label\\\"></label>\\n\\n  <div [ngSwitch]=\\\"field.type\\\">\\n    <!--<div *ngSwitchWhen=\\\"FieldTypes.Text\\\">-->\\n      <!---->\\n    <!--</div>-->\\n    <app-field-text [field]=\\\"field\\\" [formField]=\\\"formField\\\"></app-field-text>\\n  </div>\\n\\n  <p class=\\\"help-block\\\" [innerHtml]=\\\"field.help\\\"></p>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form-field/form-field.component.html\n// module id = ../../../../../src/app/form/form-field/form-field.component.html\n// module chunks = 1","import {Component, OnInit, EventEmitter, Input, Output, OnChanges, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators, FormsModule} from '@angular/forms';\n\nimport {Field} from '../../field/field';\nimport {FieldType} from '../../field/field-type.enum';\nimport {FieldService} from '../../field/field.service';\n\n@Component({\n  selector: 'app-form-field',\n  templateUrl: './form-field.component.html',\n  styleUrls: ['./form-field.component.css']\n})\nexport class FormFieldComponent implements OnInit {\n\n  FieldTypes: typeof FieldType = FieldType;\n  @Input() field: Field;\n  @Input() formField: FormControl;\n  @Input() form: FormGroup;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/form/form-field/form-field.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form.component.css\n// module id = ../../../../../src/app/form/form.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n    <h1 class=\\\"page-header\\\">Form</h1>\\n    <p class=\\\"help-block\\\">\\n      This form is generated based on the fields defined in the <a [routerLink]=\\\"['/field']\\\">Fields</a> section.<br/>\\n      You can see the submitted data for this form is <a [routerLink]=\\\"['/dashboard']\\\">Dashboard</a>.\\n    </p>\\n\\n    <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"save(form.value, form.valid)\\\" novalidate>\\n\\n      <app-form-field\\n        *ngFor=\\\"let field of fields\\\"\\n        [field]=\\\"field\\\"\\n        [form]=\\\"form\\\"\\n        [formField]=\\\"form.controls[field.name]\\\"></app-form-field>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-default\\\">Submit</button>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// E:/www/ng2-sample/src/app/form/form.component.html\n// module id = ../../../../../src/app/form/form.component.html\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators, FormsModule} from '@angular/forms';\n\nimport {Field} from '../field/field';\nimport {FieldType} from '../field/field-type.enum';\nimport {FieldService} from '../field/field.service';\nimport {FormService} from './form.service';\n\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n  fields: Field[];\n  form: FormGroup = null;\n  submitted: boolean = false;\n\n  constructor(private fieldService: FieldService,\n              private formService: FormService,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit() {\n   return this.getFields().then(() => {\n     let fields = {};\n     for (let i = 0, l = this.fields.length; i < l; i++) {\n       let field = this.fields[i] as Field;\n       fields[field.name] = [null];\n     }\n\n     this.form = this.fb.group(fields);\n    });\n  }\n\n  getFields(): Promise<Field[]> {\n    return this.fieldService\n      .getFields()\n      .then(fields => this.fields = fields);\n  }\n\n  save(value: any): void {\n    this.submitted = true;\n    this.formService.create(value).then(() => {\n      this.submitted = false;\n      this.form.reset();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/form/form.component.ts","import {Injectable}    from '@angular/core';\nimport {Headers, Http} from '@angular/http';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\nexport class FormService {\n\n  private headers = new Headers({'Content-Type': 'application/json'});\n  private formUrl = 'api/form';  // URL to web api\n\n  constructor(private http: Http) {\n  }\n\n  getData(): Promise<any[]> {\n    return this.http.get(this.formUrl)\n      .toPromise()\n      .then(response => response.json().data as any[])\n      .catch(this.handleError);\n  }\n\n  create(form): Promise<any> {\n    return this.http\n      .post(this.formUrl, JSON.stringify(form), {headers: this.headers})\n      .toPromise()\n      .then(res => res.json().data)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error); // for demo purposes only\n    return Promise.reject(error.message || error);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/form/form.service.ts","/**\r\n * Created by Exlord on 6/13/2017.\r\n */\r\nimport {InMemoryDbService} from 'angular-in-memory-web-api';\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n  createDb() {\r\n    const fields = [\r\n      {id: 0, name: 'name', type: 1, label: 'Name', help: 'this is help text'},\r\n      {id: 1, name: 'last_name', type: 1, label: 'Last Name', help: 'this is another help text'},\r\n    ];\r\n    const form = [\r\n      {id: 0, name: 'name1', last_name: 'last_name1'},\r\n      {id: 1, name: 'name2', last_name: 'last_name2'}\r\n    ];\r\n    return {fields, form};\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/app/in-memory-data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// E:/www/ng2-sample/src/main.ts"],"sourceRoot":""}